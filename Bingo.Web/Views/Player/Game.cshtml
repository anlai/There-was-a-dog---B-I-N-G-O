@{
    ViewBag.Title = "Game";
}

﻿@model Bingo.Web.Models.GameViewModel

@{
    ViewBag.Title = "Game";
}

@section AdditionalScripts{
    <script src='@Url.Script("protoclass.js")'></script>
    <script src='@Url.Script("box2d.js")'></script>
    <script src='@Url.Script("bingo_balls.js")'></script>

    <script type="text/javascript">
        //=====================================
        // Urls
        //=====================================
        // url for get next ball
        var getNextBallUrl = '@Url.Action("GetNextBall", "Bingo")';
        // url for reporting bingo
        var reportBingoUrl = '@Url.Action("ReportBingo", "Bingo")';
        // url for initialize
        var initializeUrl = '@Url.Action("Initialize", "Bingo")';

        //=====================================
        // Timer Variables
        //=====================================
        // server time to sync with
        var serverTime = new Date('@Model.ServerTime');
        // the timer id for polling for new ball
        var ballIntervalId;
        // interval for polling balls
        var pollingInterval = 10000;
        //=====================================
        // Game Variables
        //=====================================
        // user id
        var userId = '@Model.UserId';
        // game id
        var gameId;
        // indicator if game is over
        var isgameOver = false;

        $(function () {

            // set the call bingo button style
            $("#btn_CallBingo").button().click(reportBingo);

            $("a.button").button();

            // selecting a number
            $(".bingo_cell").click(function () {

                $(this).toggleClass("selected");

            });

            $("#gameover_container").dialog({
                modal: true,
                closeOnEscape: false,
                autoOpen: false,
                height: 200, width: 400,
                buttons: {
                    "Back to Waiting Room": function () { }
                },
                open: function (event, ui) { jQuery('.ui-dialog-titlebar-close').hide(); }
            });

            initialize();

            gameOver();
        });

        // reports bingo to the server and reports back
        function reportBingo() {
            var selectedNumbers = [];
            $.each($(".selected"), function (index, item) { selectedNumbers.push(parseInt($(item).html())); });

            var data = { id: gameId, userId: userId, numbers: selectedNumbers };

            $.ajax({
                url: reportBingoUrl,
                data: JSON.stringify(data),
                type: 'POST',
                contentType: 'application/json',
                dataType: 'json',
                success: function (result) {
                    // result == true, game over
                    isgameOver = result;
                }
            });
        }

        // load all balls for an inprogress game
        function initialize() {

            // setup physics world
            initializePhysics();

            initilizeGame();

            initilizePolling();
        }

        function initilizeGame() {
            // get existing game information
            $.get(initializeUrl, function (result) {

                $.each(result.balls, function (index, item) {
                    createBall(item.Letter, item.Number);
                });

                gameId = result.gameId;

            });
        }

        function initilizePolling() {
            setTimeout(setPolling, calculateTimeDelta());
        }

        function calculateTimeDelta() {
            var date = serverTime;

            // interval is 10 seconds, so wait till next 10 second interval
            var seconds = 10 - (date.getSeconds() % 10)

            // return seconds converted to milliseconds
            return seconds * 1000;
        }

        function setPolling() {
            // do initial call since we are lined up with the clock
            getNewBalls();

            // check for a checked in student every 5 minutes
            ballIntervalId = setInterval(getNewBalls, pollingInterval);
        }

        function gameOver() {

            // clear out the timer
            clearInteral(ballIntervalId);

            // show game over dialog
            $("#gameover_container").dialog("open");
        }
    </script>

    <link href='@Url.Css("Game.css")' rel="stylesheet" type="text/css" />
}

    <div id="new_ball_container" class="ui-corner-all game_box">
        <div id="new_ball"><span id="number">I20</span></div>
    </div>


	<div id="card_container" class="ui-corner-all game_box">

        <table class="noicon">
            <thead>
                <tr>
                <th class="bingo_header">B</th>
                <th class="bingo_header">I</th>
                <th class="bingo_header">N</th>
                <th class="bingo_header">G</th>
                <th class="bingo_header">O</th>
                </tr>
            </thead>
            <tbody>
		        @for (var i = 0; i < Model.GameBoard.BCol.Length; i++)
                { 
                <tr>
                <td class="b bingo_cell">@Model.GameBoard.BCol[i]</td>
                <td class="i bingo_cell">@Model.GameBoard.ICol[i]</td>
                @if (Model.GameBoard.NCol[i] == 0)
                {
                    <td class="n bingo_cell">Free</td>
                }
                else
                { 
                    <td class="n bingo_cell">@Model.GameBoard.NCol[i]</td>
                }
                
                <td class="g bingo_cell">@Model.GameBoard.GCol[i]</td>
                <td class="o bingo_cell">@Model.GameBoard.OCol[i]</td>
                </tr>
                }            
            </tbody>
        </table>



	</div>
 
	<div id="ball_container" class="ui-corner-all game_box">
	    <canvas id="canvas" width="540" height="325" />
	</div>
  
	<div id="bingo_call_container" class="ui-corner-all game_box">
		<input type="button" value="I Got BINGO!" id="btn_CallBingo"/>
	</div>
  
	<div id="scoreboard_container" class="ui-corner-all game_box">
		&nbsp;
	</div>
  

    <div id="gameover_container" title="Game Over">
    
        <p>
        Someone has gotten BINGO, this game is now over.  Please use the link below to head to the waiting room to find out who won.
        </p>
        
    </div>